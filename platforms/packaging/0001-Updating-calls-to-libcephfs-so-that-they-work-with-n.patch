From 00854604c5981da3eb1f9f0d3a5d01841ecca021 Mon Sep 17 00:00:00 2001
From: Nathan Johnson <njohnson@ena.com>
Date: Tue, 15 Aug 2017 17:45:48 -0500
Subject: [PATCH] Updating calls to libcephfs so that they work with newer
 versions of the lib

---
 platforms/packaging/bareos.spec     | 61 ++++++++++++++++++++++++-------------
 src/plugins/filed/cephfs-fd.c       | 49 ++++++++++++++++++++++-------
 src/stored/backends/cephfs_device.c | 16 +++++-----
 3 files changed, 85 insertions(+), 41 deletions(-)

diff --git a/platforms/packaging/bareos.spec b/platforms/packaging/bareos.spec
index 22183330..1f2cdd6a 100644
--- a/platforms/packaging/bareos.spec
+++ b/platforms/packaging/bareos.spec
@@ -5,8 +5,8 @@
 #
 
 Name: 		bareos
-Version: 	16.2.4
-Release: 	0
+Version: 	16.2.6
+Release: 	0%{?dist}
 Group: 		Productivity/Archiving/Backup
 License: 	AGPL-3.0
 BuildRoot: 	%{_tmppath}/%{name}-root
@@ -14,7 +14,7 @@ URL: 		http://www.bareos.org/
 Vendor: 	The Bareos Team
 #Packager: 	{_packager}
 
-%define _libversion    16.2.4
+%define _libversion    16.2.6
 
 %define library_dir    %{_libdir}/bareos
 %define backend_dir    %{_libdir}/bareos/backends
@@ -98,24 +98,25 @@ Vendor: 	The Bareos Team
 %endif
 
 # centos/rhel 5: segfault when building qt monitor
-%if 0%{?centos_version} == 505 || 0%{?rhel_version} == 505
+%if 0%{?centos_ver} == 505 || 0%{?rhel_version} == 505
 %define build_bat 0
 %define build_qt_monitor 0
 %define have_git 0
 %define python_plugins 0
 %endif
 
-%if 0%{?rhel_version} >= 700 || 0%{?centos_version} >= 700 || 0%{?fedora_version} >= 19
+%if 0%{?rhel_version} >= 700 || 0%{?centos_ver} >= 7 || 0%{?fedora_version} >= 19
 %define systemd_support 1
+%define ceph 1
+%define droplet 1
+%define cpath /usr/include/droplet-3.0
+
+BuildRequires: libdroplet-devel
 %if 0%{?fedora_version} != 19
 %define glusterfs 1
 %endif
 %endif
 
-%if 0%{?rhel_version} >= 700
-%define ceph 1
-%endif
-
 %if 0%{?systemd_support}
 BuildRequires: systemd
 # see https://en.opensuse.org/openSUSE:Systemd_packaging_guidelines
@@ -130,7 +131,7 @@ BuildRequires: glusterfs-devel glusterfs-api-devel
 %endif
 
 %if 0%{?ceph}
-BuildRequires: ceph-devel
+BuildRequires: libradosstriper-devel librados-devel libcephfs-devel
 %endif
 
 %if 0%{?have_git}
@@ -138,6 +139,8 @@ BuildRequires: git-core
 %endif
 
 Source0: %{name}-%{version}.tar.gz
+Patch0: bareos_16.2.6_cephfs_update.patch
+Patch1: 0001-mvw-S3-and-Gluster-patches.patch
 
 #BuildRequires: elfutils
 BuildRequires: gcc
@@ -154,7 +157,7 @@ BuildRequires: openssl-devel
 BuildRequires: libacl-devel
 BuildRequires: pkgconfig
 BuildRequires: lzo-devel
-BuildRequires: libfastlz-devel
+BuildRequires: fastlz-devel
 BuildRequires: logrotate
 %if 0%{?build_sqlite3}
 %if 0%{?suse_version}
@@ -170,7 +173,7 @@ BuildRequires: libcap-devel
 BuildRequires: mtx
 
 %if 0%{?build_bat} || 0%{?build_qt_monitor}
-BuildRequires: libqt4-devel
+BuildRequires: qt4-devel
 %endif
 
 %if 0%{?check_cmocka}
@@ -206,10 +209,10 @@ BuildRequires: lsb-release
 
 BuildRequires: libtermcap-devel
 BuildRequires: passwd
-BuildRequires: tcp_wrappers
+BuildRequires: tcp_wrappers-devel
 
 # Some magic to be able to determine what platform we are running on.
-%if 0%{?rhel_version} || 0%{?centos_version} || 0%{?fedora_version}
+%if 0%{?rhel_version} || 0%{?centos_ver} || 0%{?fedora_version}
 
 BuildRequires: redhat-lsb
 
@@ -218,7 +221,7 @@ BuildRequires: redhat-lsb
 BuildRequires: redhat-release
 %endif
 
-%if 0%{?centos_version} && 0%{?centos_version} <= 600
+%if 0%{?centos_ver} && 0%{?centos_ver} <= 6
 BuildRequires: redhat-release
 %endif
 
@@ -226,7 +229,7 @@ BuildRequires: redhat-release
 BuildRequires: fedora-release
 %endif
 
-%if 0%{?rhel_version} >= 600 || 0%{?centos_version} >= 600 || 0%{?fedora_version} >= 14
+%if 0%{?rhel_version} >= 600 || 0%{?centos_ver} >= 6 || 0%{?fedora_version} >= 14
 BuildRequires: jansson-devel
 BuildRequires: tcp_wrappers-devel
 %endif
@@ -441,24 +444,24 @@ Requires:   sqlite3-devel
 Requires:   sqlite-devel
 %endif
 %endif
-%if 0%{?rhel_version} || 0%{?centos_version} || 0%{?fedora_version}
+%if 0%{?rhel_version} || 0%{?centos_ver} || 0%{?fedora_version}
 Requires:   openssl-devel
 %else
 Requires:   libopenssl-devel
 %endif
-%if 0%{?rhel_version} >= 600 || 0%{?centos_version} >= 600 || 0%{?fedora_version}
+%if 0%{?rhel_version} >= 600 || 0%{?centos_ver} >= 6 || 0%{?fedora_version}
 Requires:   tcp_wrappers-devel
 %else
-%if 0%{?rhel_version} || 0%{?centos_version}
+%if 0%{?rhel_version} || 0%{?centos_ver}
 Requires:   tcp_wrappers
 %else
 Requires:   tcpd-devel
 %endif
 %endif
-%if 0%{?rhel_version} >= 700 || 0%{?centos_version} >= 700 || 0%{?fedora_version} >= 19
+%if 0%{?rhel_version} >= 700 || 0%{?centos_ver} >= 7 || 0%{?fedora_version} >= 19
 Requires:   mariadb-devel
 %else
-%if 0%{?rhel_version} || 0%{?centos_version} || 0%{?fedora_version}
+%if 0%{?rhel_version} || 0%{?centos_ver} || 0%{?fedora_version}
 Requires:   mysql-devel
 %else
 Requires:   libmysqlclient-devel
@@ -652,7 +655,8 @@ BAT is a graphical interface for Bareos.
 This package contains bareos development files.
 
 %prep
-%setup
+%setup -n %name-Release-%version
+%patch0 -p1
 
 %build
 # Cleanup defined in Fedora Packaging:Guidelines
@@ -664,6 +668,11 @@ fi
 export PATH=$PATH:/usr/lib64/qt4/bin:/usr/lib/qt4/bin
 %endif
 export MTX=/usr/sbin/mtx
+
+%if 0%{?droplet}
+export CPATH=$CPATH:/usr/include/droplet-3.0
+%endif
+
 # Notice keep the upstream order of ./configure --help
 %configure \
   --prefix=%{_prefix} \
@@ -732,6 +741,14 @@ export MTX=/usr/sbin/mtx
 %if 0%{?systemd_support}
   --with-systemd \
 %endif
+%if 0%{?droplet}
+  --with-droplet \
+%endif
+%if 0%{?ceph}
+  --with-cephfs \
+  --with-rados \
+  --with-rados-striper \
+%endif
   --enable-includes
 
 #Add flags
diff --git a/src/plugins/filed/cephfs-fd.c b/src/plugins/filed/cephfs-fd.c
index 627311af..4b411fc0 100644
--- a/src/plugins/filed/cephfs-fd.c
+++ b/src/plugins/filed/cephfs-fd.c
@@ -66,6 +66,7 @@ static bRC parse_plugin_definition(bpContext *ctx, void *value);
 static bRC setup_backup(bpContext *ctx, void *value);
 static bRC setup_restore(bpContext *ctx, void *value);
 static bRC end_restore_job(bpContext *ctx, void *value);
+static void convertCephStatsToStats(struct ceph_statx *csx, struct stat *st);
 
 /*
  * Pointers to Bareos functions
@@ -267,6 +268,29 @@ static bRC newPlugin(bpContext *ctx)
    return bRC_OK;
 }
 
+/**
+ * Convert a ceph_statx to a stat.  Modifies st
+ */
+static void convertCephStatsToStats(struct ceph_statx *csx, struct stat *st) {
+   st->st_atim = csx->stx_atime;
+   st->st_atime = csx->stx_atime.tv_sec;
+   st->st_blksize = csx->stx_blksize;
+   st->st_blocks = csx->stx_blocks;
+   st->st_ctim = csx->stx_ctime;
+   st->st_ctime = csx->stx_ctime.tv_sec;
+   st->st_dev = csx->stx_dev;
+   st->st_gid = csx->stx_gid;
+   st->st_ino = csx->stx_ino;
+   st->st_mode = csx->stx_mode;
+   st->st_mtim = csx->stx_mtime;
+   st->st_mtime = csx->stx_mtime.tv_sec;
+   st->st_nlink = csx->stx_nlink;
+   st->st_rdev = csx->stx_rdev;
+   st->st_size = csx->stx_size;
+   st->st_uid = csx->stx_uid;
+}
+
+
 /*
  * Free a plugin instance, i.e. release our private storage
  */
@@ -462,17 +486,20 @@ static bRC get_next_file_to_backup(bpContext *ctx)
     * Loop until we know what file is next or when we are done.
     */
    while (1) {
-      int stmask = 0;
-
+      struct ceph_statx cstatp;
       memset(&p_ctx->statp, 0, sizeof(p_ctx->statp));
       memset(&p_ctx->de, 0, sizeof(p_ctx->de));
-      status = ceph_readdirplus_r(p_ctx->cmount, p_ctx->cdir, &p_ctx->de, &p_ctx->statp, &stmask);
+      memset(&cstatp, 0, sizeof(cstatp));
+
 
+      status = ceph_readdirplus_r(p_ctx->cmount, p_ctx->cdir, &p_ctx->de, &cstatp, CEPH_STATX_BASIC_STATS, 0, NULL);
+      convertCephStatsToStats(&cstatp, &p_ctx->statp);
       /*
        * No more entries in this directory ?
        */
       if (status == 0) {
-         status = ceph_stat(p_ctx->cmount, p_ctx->cwd, &p_ctx->statp);
+         status = ceph_statx(p_ctx->cmount, p_ctx->cwd, &cstatp, CEPH_STATX_BASIC_STATS, 0);
+         convertCephStatsToStats(&cstatp, &p_ctx->statp);
          if (status < 0) {
             berrno be;
 
@@ -1036,7 +1063,7 @@ static bRC pluginIO(bpContext *ctx, struct io_pkt *io)
 
    switch(io->func) {
    case IO_OPEN:
-      p_ctx->cfd = ceph_open(p_ctx->cmount, io->fname, io->flags, io->mode);
+      p_ctx->cfd = ceph_open(p_ctx->cmount, io->fname, int(io->flags), io->mode);
       if (p_ctx->cfd < 0) {
          io->status = -1;
          io->io_errno = -p_ctx->cfd;
@@ -1154,7 +1181,7 @@ static bRC endRestoreFile(bpContext *ctx)
 static inline bool cephfs_makedirs(plugin_ctx *p_ctx, const char *directory)
 {
    char *bp;
-   struct stat st;
+   struct ceph_statx st;
    bool retval = false;
    POOL_MEM new_directory(PM_FNAME);
 
@@ -1182,7 +1209,7 @@ static inline bool cephfs_makedirs(plugin_ctx *p_ctx, const char *directory)
       } else {
          *bp = '\0';
 
-         if (ceph_lstat(p_ctx->cmount, new_directory.c_str(), &st) != 0) {
+         if (ceph_statx(p_ctx->cmount, new_directory.c_str(), &st, CEPH_STATX_BASIC_STATS, AT_SYMLINK_NOFOLLOW) != 0) {
             switch (errno) {
             case ENOENT:
                /*
@@ -1228,7 +1255,7 @@ static bRC createFile(bpContext *ctx, struct restore_pkt *rp)
 {
    int status;
    bool exists = false;
-   struct stat st;
+   struct ceph_statx st;
    plugin_ctx *p_ctx = (plugin_ctx *)ctx->pContext;
 
    if (!p_ctx) {
@@ -1239,20 +1266,20 @@ static bRC createFile(bpContext *ctx, struct restore_pkt *rp)
     * See if the file already exists.
     */
    Dmsg(ctx, 400, "cephfs-fd: Replace=%c %d\n", (char)rp->replace, rp->replace);
-   status = ceph_lstat(p_ctx->cmount, rp->ofname, &st);
+   status = ceph_statx(p_ctx->cmount, rp->ofname, &st, CEPH_STATX_BASIC_STATS, AT_SYMLINK_NOFOLLOW);
    if (status == 0) {
       exists = true;
 
       switch (rp->replace) {
       case REPLACE_IFNEWER:
-         if (rp->statp.st_mtime <= st.st_mtime) {
+         if (rp->statp.st_mtime <= st.stx_mtime.tv_sec) {
             Jmsg(ctx, M_INFO, 0, _("cephfs-fd: File skipped. Not newer: %s\n"), rp->ofname);
             rp->create_status = CF_SKIP;
             goto bail_out;
          }
          break;
       case REPLACE_IFOLDER:
-         if (rp->statp.st_mtime >= st.st_mtime) {
+         if (rp->statp.st_mtime >= st.stx_mtime.tv_sec) {
             Jmsg(ctx, M_INFO, 0, _("cephfs-fd: File skipped. Not older: %s\n"), rp->ofname);
             rp->create_status = CF_SKIP;
             goto bail_out;
diff --git a/src/stored/backends/cephfs_device.c b/src/stored/backends/cephfs_device.c
index 041641e0..d523e803 100644
--- a/src/stored/backends/cephfs_device.c
+++ b/src/stored/backends/cephfs_device.c
@@ -152,12 +152,12 @@ int cephfs_device::d_open(const char *pathname, int flags, int mode)
     * See if we store in an explicit directory.
     */
    if (m_basedir) {
-      struct stat st;
+      struct ceph_statx st;
 
       /*
        * Make sure the dir exists if one is defined.
        */
-      status = ceph_stat(m_cmount, m_basedir, &st);
+      status = ceph_statx(m_cmount, m_basedir, &st, CEPH_STATX_BASIC_STATS, 0);
       if (status < 0) {
          switch (status) {
          case -ENOENT:
@@ -172,7 +172,7 @@ int cephfs_device::d_open(const char *pathname, int flags, int mode)
             goto bail_out;
          }
       } else {
-         if (!S_ISDIR(st.st_mode)) {
+         if (!S_ISDIR(st.stx_mode)) {
             Mmsg1(errmsg, _("Specified CEPHFS direcory %s is not a directory.\n"), m_basedir);
             Emsg0(M_FATAL, 0, errmsg);
             goto bail_out;
@@ -271,7 +271,7 @@ boffset_t cephfs_device::d_lseek(DCR *dcr, boffset_t offset, int whence)
 bool cephfs_device::d_truncate(DCR *dcr)
 {
    int status;
-   struct stat st;
+   struct ceph_statx st;
 
    if (m_fd >= 0) {
       status = ceph_ftruncate(m_cmount, m_fd, 0);
@@ -291,7 +291,7 @@ bool cephfs_device::d_truncate(DCR *dcr)
        * 3. open new file with same mode
        * 4. change ownership to original
        */
-      status = ceph_fstat(m_cmount, m_fd, &st);
+      status = ceph_fstatx(m_cmount, m_fd, &st, CEPH_STATX_BASIC_STATS, 0);
       if (status < 0) {
          berrno be;
 
@@ -300,7 +300,7 @@ bool cephfs_device::d_truncate(DCR *dcr)
          return false;
       }
 
-      if (st.st_size != 0) {             /* ceph_ftruncate() didn't work */
+      if (st.stx_size != 0) {             /* ceph_ftruncate() didn't work */
          ceph_close(m_cmount, m_fd);
          ceph_unlink(m_cmount, m_virtual_filename);
 
@@ -308,7 +308,7 @@ bool cephfs_device::d_truncate(DCR *dcr)
           * Recreate the file -- of course, empty
           */
          oflags = O_CREAT | O_RDWR | O_BINARY;
-         m_fd = ceph_open(m_cmount, m_virtual_filename, oflags, st.st_mode);
+         m_fd = ceph_open(m_cmount, m_virtual_filename, oflags, st.stx_mode);
          if (m_fd < 0) {
             berrno be;
 
@@ -323,7 +323,7 @@ bool cephfs_device::d_truncate(DCR *dcr)
          /*
           * Reset proper owner
           */
-         ceph_chown(m_cmount, m_virtual_filename, st.st_uid, st.st_gid);
+         ceph_chown(m_cmount, m_virtual_filename, st.stx_uid, st.stx_gid);
       }
    }
 
-- 
2.11.0 (Apple Git-81)

